version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: air-quality-postgres
    environment:
      POSTGRES_USER: ${DB_USER:-airquality}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-airquality123}
      POSTGRES_DB: ${DB_NAME:-air_quality_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-airquality}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: air-quality-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis123}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # InfluxDB Time Series Database
  influxdb:
    image: influxdb:2.7-alpine
    container_name: air-quality-influxdb
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: ${INFLUX_USERNAME:-admin}
      DOCKER_INFLUXDB_INIT_PASSWORD: ${INFLUX_PASSWORD:-influx123}
      DOCKER_INFLUXDB_INIT_ORG: ${INFLUX_ORG:-air-quality}
      DOCKER_INFLUXDB_INIT_BUCKET: ${INFLUX_BUCKET:-measurements}
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${INFLUX_TOKEN:-my-super-secret-auth-token}
    volumes:
      - influxdb_data:/var/lib/influxdb2
    ports:
      - "8086:8086"
    healthcheck:
      test: ["CMD", "influx", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MQTT Broker
  mosquitto:
    image: eclipse-mosquitto:2
    container_name: air-quality-mqtt
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - mosquitto_data:/mosquitto/data
      - mosquitto_log:/mosquitto/log
    ports:
      - "1883:1883"
      - "9001:9001"
    command: mosquitto -c /mosquitto/config/mosquitto.conf

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: air-quality-backend
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 5000
      DATABASE_URL: postgres://${DB_USER:-airquality}:${DB_PASSWORD:-airquality123}@postgres:5432/${DB_NAME:-air_quality_db}
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379
      INFLUX_URL: http://influxdb:8086
      INFLUX_TOKEN: ${INFLUX_TOKEN:-my-super-secret-auth-token}
      INFLUX_ORG: ${INFLUX_ORG:-air-quality}
      INFLUX_BUCKET: ${INFLUX_BUCKET:-measurements}
      JWT_SECRET: ${JWT_SECRET:-your-secret-key}
      JWT_EXPIRE: ${JWT_EXPIRE:-7d}
      MQTT_URL: mqtt://mosquitto:1883
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      influxdb:
        condition: service_healthy
      mosquitto:
        condition: service_started
    ports:
      - "5000:5000"
    volumes:
      - ./backend/uploads:/app/uploads
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Sensor Service
  sensor-service:
    build:
      context: ./sensor-service
      dockerfile: Dockerfile
    container_name: air-quality-sensors
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      MQTT_URL: mqtt://mosquitto:1883
      API_URL: http://backend:5000
      SENSOR_INTERVAL: ${SENSOR_INTERVAL:-60000}
    depends_on:
      - mosquitto
      - backend
    volumes:
      - ./sensor-service/config:/app/config

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:5000/api}
        REACT_APP_WS_URL: ${REACT_APP_WS_URL:-http://localhost:5000}
    container_name: air-quality-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend

  # Nginx Reverse Proxy (optional, for production)
  nginx:
    image: nginx:alpine
    container_name: air-quality-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:
  influxdb_data:
  mosquitto_data:
  mosquitto_log: